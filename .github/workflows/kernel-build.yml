name: 自动内核编译与BBR v3安装

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 时间 00:00 自动运行
  workflow_dispatch: # 手动触发支持

jobs:
  build:
    name: 编译内核（Debian 12 容器）
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装编译所需依赖
        run: |
          apt-get update
          apt-get install -y \
            git build-essential libncurses-dev libssl-dev libelf-dev bison bc flex rsync \
            debhelper vim gcc make zlib1g-dev libbz2-dev fakeroot kmod libncurses5 dkms jq curl \
            gcc-aarch64-linux-gnu

      - name: 获取最新内核版本
        id: kernel_version
        run: |
          LATEST_KERNEL_VERSION=$(curl -s https://www.kernel.org/releases.json | jq -r '.latest_stable.version')
          if [[ -z "$LATEST_KERNEL_VERSION" ]]; then
            echo "无法获取最新内核版本，请检查网络或 kernel.org 是否可访问。"
            exit 1
          fi
          echo "最新内核版本为：$LATEST_KERNEL_VERSION"
          echo "::set-output name=version::$LATEST_KERNEL_VERSION"

      - name: 编译 ARM64 内核
        run: |
          echo "下载内核源码..."
          git clone --branch v${{ steps.kernel_version.outputs.version }} --depth 1 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          cd linux

          echo "获取当前内核版本..."
          KERNEL_VERSION=$(make kernelversion)
          echo "当前内核版本为：$KERNEL_VERSION"

          echo "添加 BBR v3 源码仓库..."
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout google-bbr/v3

          echo "写回 Makefile..."
          sed -i "s/^VERSION = .*/VERSION = ${KERNEL_VERSION%%.*}/" Makefile
          sed -i "s/^PATCHLEVEL = .*/PATCHLEVEL = $(echo $KERNEL_VERSION | cut -d. -f2)/" Makefile
          sed -i "s/^SUBLEVEL = .*/SUBLEVEL = $(echo $KERNEL_VERSION | cut -d. -f3 | cut -d- -f1)/" Makefile

          echo "配置内核..."
          curl -L https://raw.githubusercontent.com/byJoey/Actions-bbr-v3/refs/heads/main/arm64.config -o .config
          make ARCH=arm64 olddefconfig

          echo "编译 ARM64 内核..."
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LOCALVERSION=-joeyblog-joeyblog.net bindeb-pkg -j$(nproc)
          mkdir -p ../kernel_release/arm64
          mv ../*.deb ../kernel_release/arm64/

      - name: 编译 x86_64 内核
        run: |
          echo "重新拉取内核源码..."
          cd ..
          rm -rf linux
          git clone --branch v${{ steps.kernel_version.outputs.version }} --depth 1 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          cd linux

          echo "获取当前内核版本..."
          KERNEL_VERSION=$(make kernelversion)
          echo "当前内核版本为：$KERNEL_VERSION"

          echo "添加 BBR v3 源码仓库..."
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout google-bbr/v3

          echo "写回 Makefile..."
          sed -i "s/^VERSION = .*/VERSION = ${KERNEL_VERSION%%.*}/" Makefile
          sed -i "s/^PATCHLEVEL = .*/PATCHLEVEL = $(echo $KERNEL_VERSION | cut -d. -f2)/" Makefile
          sed -i "s/^SUBLEVEL = .*/SUBLEVEL = $(echo $KERNEL_VERSION | cut -d. -f3 | cut -d- -f1)/" Makefile

          echo "配置内核..."
          curl -L https://raw.githubusercontent.com/byJoey/Actions-bbr-v3/refs/heads/main/x86-64.config -o .config
          make ARCH=x86_64 olddefconfig

          echo "编译 x86_64 内核..."
          make ARCH=x86_64 LOCALVERSION=-joeyblog-joeyblog.net bindeb-pkg -j$(nproc)
          mkdir -p ../kernel_release/x86_64
          mv ../*.deb ../kernel_release/x86_64/

          echo "压缩内核包..."
          cd ..
          tar -czvf kernel_release_arm64_${{ steps.kernel_version.outputs.version }}.tar.gz -C kernel_release/arm64 .
          tar -czvf kernel_release_x86_64_${{ steps.kernel_version.outputs.version }}.tar.gz -C kernel_release/x86_64 .

      - name: 上传到 GitHub Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            kernel_release_arm64_${{ steps.kernel_version.outputs.version }}.tar.gz
            kernel_release_x86_64_${{ steps.kernel_version.outputs.version }}.tar.gz
          body: |
            自动生成的 ${{ steps.kernel_version.outputs.version }} 版本内核（ARM64 和 x86_64）
